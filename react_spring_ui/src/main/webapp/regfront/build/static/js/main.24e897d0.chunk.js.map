{"version":3,"sources":["components/HomePageStyle.module.css","components/en.js","components/de.js","components/RegistrationForm.js","components/Header.js","components/Home.js","components/Search.js","controllers/ActionFront.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firstnameplace","lastnameplace","male","female","enterstreetnumber","enterhousenumber","city","state","country","addressline2","addressline1","email","phonenumber","dob","star","lastname","firstname","gender","patientid","enterpatientid","pleasefillthefields","clear","register","changelanguage","ds","issue","search","DEFAULT_STATE","firstName","lastName","phoneNo","address","firstNameError","lastNameError","phoneNoError","zipcode","addressLine1","addressLine2","RegistrationForm","props","handleChangeAll","event","setState","target","name","value","validate","match","handleSubmit","isValid","preventDefault","console","log","patient","axios","post","headers","lang","then","response","handleSuccessfulResponse","handleClear","welcomeMessage","bind","this","data","className","Form","id","onSubmit","component","content","styles","error","type","attributes","placeholder","onChange","ref","el","required","max","moment","format","onClick","Component","counterpart","registerTranslations","en","de","setLocale","Header","onLangChange","e","lnk","href","to","Home","container","searchMessage","Search","handleIdChange","searchByIdFirstnameLastnameDob","get","params","patientId","res","show","searchmessage","dobError","map","index","key","width","ActionFront","exact","path","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24e897d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"HomePageStyle_error__3en9Y\",\"container\":\"HomePageStyle_container__hl1js\"};","import React,{Component} from 'react'\r\nexport default {\r\n  firstnameplace: 'FirstName',\r\n  lastnameplace: 'LastName',\r\n  male:'Male',\r\n  female:\"Female\",\r\n  enterstreetnumber:'Enter Street Number',\r\n  enterhousenumber:'Enter House Number',\r\n  city:'City:',\r\n  state:'State:',\r\n  country:'Country:',\r\n  addressline2:'Address\tLine2:',\r\n  addressline1:'Address\tLine1:',\r\n  email:'Email:',\r\n  phonenumber:'Phone Number:',\r\n  dob:'D.O.B:',\r\n  star:'*',\r\n  lastname:'LastName:',\r\n  firstname:'FirstName:',\r\n  gender:'Gender',\r\n  patientid:'Patient Id:',\r\n  enterpatientid:'Enter Patient Id',\r\n  pleasefillthefields:'Please fill the fields marked as ',\r\n  clear:'Clear',\r\n  register:'Register',\r\n  changelanguage:'Change Language: ',\r\n  ds:'patientregitered', \r\n  issue:\"Issue\",\r\n  search:'Search',\r\n  patientid:\"Patient_id:\",\r\n  searchbyfirstname:\"Search By Firstname\",\r\n  enterpatientfirstname:\"Enter Patient Firstname\",\r\n  searchbylastname:\"Search By Lastname\",\r\n  enterpatientlastname:\"Enter Patient Lastname\",\r\n  searchbydob:\"Search by D.O.B\",\r\n  enterpatientdob:\"Enter patient D.O.B\",\r\n  searchbyid:\"Search By PatientId\",\r\n  searchByfirstnamelastnamedob:\"Search by firstname,lastname and dob\",\r\n  enterpatientdob:\"yyyy-mm-dd\",\r\n  searchByidfirstnamelastnamedob:\"Search\"\r\n}","import React,{Component} from 'react'\r\nexport default {\r\n  firstnameplace: 'Vorname',\r\n  lastnameplace: 'Familienname',\r\n  male:'Männlich',\r\n  female:\"Weiblich\",\r\n  enterstreetnumber:'Hausnummer eingeben',\r\n  enterhousenumber:'Hausnummer eingeben',\r\n  city:'Stadt:',\r\n  state:'Zustand:',\r\n  country:'Land:',\r\n  addressline2:'Adresszeile 2:',\r\n  addressline1:'Anschrift Zeile 1:',\r\n  email:'Email:',\r\n  phonenumber:'Telefonnu  mmer:  ',\r\n  dob:'D.O.B:',\r\n  lastname:'Familien  name:',\r\n  firstname:'Vorname:',\r\n  gender:'Geschlecht:',\r\n  patientid:'Patienten ID:',\r\n  enterpatientid:'Patienten-IDeingeben',\r\n  pleasefillthefields:'Bitte füllen Sie die mit gekennzeichneten Felder aus',\r\n  clear:'klar',\r\n  register:'Registrieren',\r\n  changelanguage:'Sprache ändern',\r\n  patientid:'Patienten ID',\r\n  search:'Suche',\r\n  issue : \"Issue\",\r\n  searchbyfirstname:\"Suche nach Vorname\",\r\n  enterpatientfirstname:\"Geben Sie den Vornamen des Patienten ein\",\r\n  searchbylastname:\"Suche nach Nachnamen\",\r\n  enterpatientlastname:\"Geben Sie den Nachnamen des Patienten ein\",\r\n  searchbydob:\"Suche nach D.O.B\",\r\n  enterpatientdob:\"Enetr Patient D.O.B in the format yyyy-mm-dd\",\r\n  searchbyid:\"Suche nach Patienten-ID\",\r\n  searchByidfirstnamelastnamedob:\"Suche\"\r\n  \r\n}","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport styles from './HomePageStyle.module.css';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport Translate from 'react-translate-component';\r\nimport Header from './Header';\r\n{/* This is to initialize the default state of the variables as empty*/}\r\nconst DEFAULT_STATE = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    gender: \"\",\r\n    phoneNo: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    firstNameError: \"\",\r\n    lastNameError: \"\",\r\n    phoneNoError: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipcode: \"\",\r\n    addressLine1: \"\",\r\n    addressLine2: \"\",\r\n    country: \"\"\r\n}\r\n\r\nclass RegistrationForm extends Component {\r\n\t\r\n\t   constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            dob: \"\",\r\n            gender: \"\",\r\n            phoneNo: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n            firstNameError: \"\",\r\n            lastNameError: \"\",\r\n            phoneNoError: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            zipcode: \"\",\r\n            addressLine1: \"\",\r\n            addressLine2: \"\",\r\n            country: \"\",\r\n            welcomeMessage:\"\",\r\n        }\r\n        {/*Binds all the functions defined in this component*/}\r\n        this.handleClear = this.handleClear.bind(this)\r\n        this.handleSuccessfulResponse= this.handleSuccessfulResponse.bind(this)\r\n\r\n    }\r\n\t   /*Sets the state to the new values after changes are made*/\r\n    handleChangeAll = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n     }\r\n    validate = () => {\r\n        let firstNameError = \"\";\r\n        let lastNameError = \"\";\r\n        let phoneNoError=\"\";\r\n                       \r\n        // firstName cannot be digits\r\n        if (this.state.firstName !== \"undefined\") {\r\n            if (!this.state.firstName.match(/^[a-zA-Z ]*$/)) {\r\n                firstNameError = \"*Please enter alphabet characters only.\";\r\n            }\r\n        }\r\n        \r\n        // lastName has to be characters only\r\n        if (this.state.lastName !== \"undefined\") {\r\n            if (!this.state.lastName.match(/^[a-zA-Z ]*$/)) {\r\n                lastNameError = \"*Please enter alphabet characters only.\";\r\n            }\r\n        }\r\n          // phone number must be of 10 digits\r\n          if (this.state.phoneNo !== \"undefined\") {\r\n            if (!this.state.phoneNo.match(/^[0-9]{10}$/)) {\r\n               phoneNoError = \"*Please enter valid mobile no.\";\r\n            }\r\n          }\r\n        if ( firstNameError || lastNameError ||phoneNoError) {\r\n            this.setState({  firstNameError,lastNameError,phoneNoError });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    handleSubmit = (event) => {\r\n        const isValid = this.validate();\r\n        event.preventDefault();\r\n        if (isValid) {\r\n            console.log(this.state);\r\n           \r\n           let patient={\r\n            \tfirstName:this.state.firstName,\r\n            \tlastName:this.state.lastName,\r\n            \tdob:this.state.dob,\r\n            \tgender:this.state.gender,\r\n            \temail:this.state.email,\r\n            \taddress: {\r\n            \t\t\tcity:this.state.city,\r\n                    \tstate:this.state.state,\r\n                    \taddressLine1:this.state.addressLine1,\r\n                    \taddressLine2:this.state.addressLine2,\r\n                    \tcountry:this.state.country\r\n            \t}\r\n            \t}\r\n                axios.post('/addPatient',patient,{\r\n                    headers: {\"Accept-Language\":this.state.lang}\r\n                \r\n                }).then(response=>this.handleSuccessfulResponse(response),console.log(this.props.lang)); \r\n             }\r\n     }\r\n    handleSuccessfulResponse(response){\r\n    \tthis.setState({welcomeMessage: response.data})\r\n    }\r\n    // clears form\r\n    handleClear = (event) => {\r\n         this.setState(DEFAULT_STATE);\r\n      }\r\n    render() {\r\n    \t\r\n    \r\n    \t\r\n            return (\r\n            \t\t\r\n            <div className=\"RegistrationForm\">\r\n           \r\n                <div className=\"d-flex justify-content-center align-items-center container \">\r\n                \r\n                    <Form id=\"form\" onSubmit={this.handleSubmit}>\r\n                    <br></br>\r\n                    <div className=\"text-center\">\r\n                    \t{this.state.welcomeMessage}\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                    \t <Translate component= \"h7\" content=\"pleasefillthefields\"/><span className={styles.error}>*</span> \r\n                \t</div>\r\n                \t<br></br>\r\n                        <div className=\"form-group row\">\r\n                            <Translate component= \"label\" className=\"col-sm-3 col-form-label\"content=\"firstname\"/><span className={styles.error}>*</span>\r\n                            <div className=\"col-sm-8\">\r\n                            <Translate component=\"input\" type=\"text\" className=\"form-control\" id=\"fname\" \r\n                                \tattributes={{placeholder: 'firstnameplace'}}\r\n                            \t\tname=\"firstName\"\r\n                                \tvalue={this.state.firstName} \r\n                                \tonChange={this.handleChangeAll}\r\n                                \tref={el => this.firstName = el}\r\n                                \trequired/>\r\n\r\n                            </div>\r\n                            {this.state.firstNameError ? (<div className={styles.error}>{this.state.firstNameError}</div>) : null}\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <Translate component= \"label\" className=\"col-sm-3 col-form-label\"content=\"lastname\"/><span className={styles.error}>*</span>\r\n                            <div className=\"col-sm-8\">\r\n                                <Translate component=\"input\" type=\"text\" className=\"form-control\" id=\"lname\" \r\n                                \tattributes={{placeholder: 'lastnameplace'}}\r\n                                \tname=\"lastName\" \r\n                                \tvalue={this.state.lastName} \r\n                                \tonChange={this.handleChangeAll} \r\n                                \trequired/>\r\n                            </div>\r\n                            {this.state.lastNameError ? (<div className={styles.error}>{this.state.lastNameError}</div>) : null}\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"dob\"/><span className={styles.error}>*</span>\r\n                            <div className=\"col-sm-8\">\r\n                                <input type=\"date\" className=\"form-control\" id=\"dob\" \r\n                                \tname=\"dob\" value={this.state.dob} \r\n                                   onChange={this.handleChangeAll}  max={moment().format(\"YYYY-MM-DD\")}required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"gender\"/><span className={styles.error}>*</span>\r\n                            <div className=\"col-sm-8\">\r\n                                <Translate component=\"select\" className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\" name=\"gender\" \r\n                                \tvalue={this.state.gender}\r\n                                \tonChange={this.handleChangeAll}>\r\n                                    <Translate component=\"option\" value=\"male\"id=\"male\" name=\"male\" content=\"male\"/>\r\n                                    <Translate component=\"option\" value=\"female\" id=\"female\" name=\"female\" content=\"female\"/>\r\n                                    required\r\n                                </Translate>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                       <Translate component= \"label\" className=\"col-sm-3 col-form-label\"content=\"phonenumber\"/><span className={styles.error}>*</span>\r\n                            <div className=\"col-sm-8\">\r\n                                <input type=\"number\" className=\"form-control\" id=\"phoneNo\"\r\n                                \tname=\"phoneNo\" value={this.state.phoneNo} \r\n                                    onChange={this.handleChangeAll} required/>\r\n                            </div>\r\n                            {this.state.phoneNoError ? (<div className={styles.error}>{this.state.phoneNoError}</div>) : null}\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                        <Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"email\"/>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"address\"\r\n                            \tname=\"email\" value={this.state.email} \r\n                            \tonChange={this.handleChangeAll} />\r\n                        </div>\r\n                      </div>\r\n                      \r\n                        <div className=\"form-group row\">\r\n                        <Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"addressline1\"/>\r\n                        <div className=\"col-sm-8\">\r\n                            <Translate component=\"input\" type=\"text\" className=\"form-control\" \r\n                            \tid=\"addressLine1\" \r\n                            \tattributes={{placeholder: 'enterstreetnumber'}} \r\n                            \tname=\"addressLine1\" value={this.state.addressLine1}\r\n                            \tonChange={this.handleChangeAll} />\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"form-group row\">\r\n                        <Translate component=\"label\" className=\"col-sm-3 col-form-label\" content=\"addressline2\"/>\r\n                        <div className=\"col-sm-8\">\r\n                            <Translate component=\"input\" type=\"text\" className=\"form-control\" id=\"addressLine2\" \r\n                            \tattributes={{placeholder: 'enterhousenumber'}} \r\n                            \tname=\"addressLine2\" \r\n                            \tvalue={this.state.addressLine2} onChange={this.handleChangeAll} />\r\n                        </div>\r\n                       </div>\r\n                       <div className=\"form-group row\">\r\n                          <Translate component=\"label\" className=\"col-sm-3 col-form-label\" content=\"city\"/>\r\n                          <div className=\"col-sm-8\">\r\n                          <input type=\"text\" className=\"form-control\" id=\"city\" \r\n                            \tname=\"city\" value={this.state.city} \r\n                           onChange={this.handleChangeAll} />\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"form-group row\">\r\n                            <Translate component= \"label\" className=\"col-sm-3 col-form-label\"content=\"state\"/>\r\n                            <div className=\"col-sm-8\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"state\"\r\n                            \tname=\"state\" value={this.state.state} \r\n                             onChange={this.handleChangeAll} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <Translate component=\"label\" className=\"col-sm-3 col-form-label\" content=\"country\"/>\r\n                            <div className=\"col-sm-8\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"country\" \r\n                                \tname=\"country\" value={this.state.country} \r\n                                \tonChange={this.handleChangeAll} />\r\n                            </div>\r\n                         </div>\r\n                      <div className=\"col-md-12 text-center\">                         \r\n                        \t<Translate component=\"Button\" type=\"submit\" value=\"Register\" className=\"btn btn-primary mr-3\" content=\"register\"/>\r\n                        \t\t<Translate component=\"Button\" className=\"btn btn-primary\" onClick={this.handleClear}content=\"clear\"/>\r\n                        </div>\r\n                        \r\n                        \t</Form>\r\n                        \t\r\n                </div>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;","import React,{Component}from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport counterpart from 'counterpart';\r\nimport Translate from 'react-translate-component';\r\nimport en from './en';\r\nimport de from './de';\r\nimport RegistrationForm from './RegistrationForm';\r\n\r\ncounterpart.registerTranslations('en', en);\r\ncounterpart.registerTranslations('de', de);\r\ncounterpart.setLocale('en');\r\nclass Header extends Component{\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        \tlang:'en',\r\n        \tlnk: false\r\n        }\r\n        \r\n\t}\r\n\tonLangChange = (e) => {\r\n\t    this.setState({lang: e.target.value});\r\n\t    counterpart.setLocale(e.target.value);\r\n\t    console.log(\"agdfs\");\r\n\t  }\r\n\t\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t<nav className=\"navbar navbar-expand-md navbar-dark bg-success\">\r\n\t\t\t\t\t\t<div><a className=\"navbar-brand\" href=\"/\">PATIENT PORTAL</a></div>\r\n\t\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t\t\t<li ><Link to=\"/Register\" className=\"nav-link\">REGISTER</Link></li>\r\n\t\t\t\t\t\t\t<li ><Link to=\"/Search\" className=\"nav-link\" >SEARCH</Link></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<ul className=\"navbar-nav navbar-collapse mr-auto justify-content-end\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Translate component=\"label\" content=\"changelanguage\" className=\"nav-link\"/>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n                        <select value={this.state.lang} onChange={this.onLangChange}>\r\n                            <option value=\"en\">English</option>\r\n                            <option value=\"de\">German</option>\r\n                        </select>\r\n                        </li>\r\n                        </ul>\r\n                       \r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\nexport default Header;","import React,{Component} from 'react'\r\nimport styles from './HomePageStyle.module.css';\r\n//styling\r\nclass Home extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t\t <div  className={styles.container}>\r\n\r\n\t\t\t    </div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Home;","import React, {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport styles from './HomePageStyle.module.css';\r\nimport Translate from 'react-translate-component';\r\nconst DEFAULT_STATE = {\r\n\t\tsearchMessage:\"\"\r\n}\r\nclass Search extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tdata: [],\r\n\t\t\tfirstName: '',\r\n\t\t\tdob:'',\r\n\t\t\tlastName:'',\r\n\t\t\tpatientId:'',\r\n\t\t\tfirstNameError: \"\",\r\n            lastNameError: \"\",\r\n            dobError: \"\",\r\n\r\n\t\t}\r\n\t\t {/*Binds all the functions defined in this component*/}\r\n\t\tthis.handleSuccessfulResponse= this.handleSuccessfulResponse.bind(this);\r\n\t\tthis.searchByIdFirstnameLastnameDob=this.searchByIdFirstnameLastnameDob.bind(this);\r\n\t\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.state = {\r\n\t\t\t\tshow: false\r\n\t\t};\r\n\r\n\t}\r\n\thandleIdChange=(event)=>{\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value \r\n\t\t})\r\n\t}\r\n\r\n\t\r\n\t/*Function to pass the values entered by the user based on which the */\r\n\tsearchByIdFirstnameLastnameDob=(event)=>{\r\n\t\t        event.preventDefault();\r\n        \t\taxios.get('http://localhost:8082/searchByIdFirstNameLastNameDob/',{\r\n        \t\tparams:{\r\n\t\t\t\t\tid:this.state.patientId,\r\n\t\t\t\t\tfirstName:this.state.firstName,\r\n\t\t\t\t\tlastName:this.state.lastName,\r\n\t\t\t\t\tdob:this.state.dob\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}).then(res=>{\r\n\t\t\t\tif(res.data===\"Server is down.Please check if the server is working\" || res.data===\"No patients available\" ||res.data===\"Patient Not Found\" ){\r\n\t\t\t\t\tthis.handleSuccessfulResponse(res.data)\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.setState(DEFAULT_STATE);\r\n\t\t\t\t\tconsole.log(this.state.searchMessage);\t\r\n\t\t\t\t\tthis.handleSuccessfulResponse(this.state.searchMessage)\r\n\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdata: res.data\r\n\t\t\t\t});\r\n\t\t\t/*Display the result in a table only when the data is retrieved from the backend*/\r\n\t\t\tthis.setState({\r\n\t\t\t\tshow: true\r\n\t\t\t});\r\n\t\t\tconsole.log(this.state.data);\r\n\t\t\tevent.preventDefault()\r\n\t\t\t\t}\t\r\n\t\t})\r\n\t\tevent.preventDefault();\r\n\t}   \r\n\t\r\n\thandleSubmit=(event)=>{\r\n\t\tconsole.log(\"Submitted\")\r\n\t\tlet patientId=this.state.patientId\r\n\t\tif(!this.state.patientId)\r\n\t\t{\r\n\t\t\taxios.get(\"http://localhost:8082/getAll\").then(res => {\r\n\t\t\t\tif(res.data===\"Server is down.Please check if the server is working\" || res.data===\"No patients available\" ){\r\n\t\t\t\t\tthis.handleSuccessfulResponse(res.data)\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata: res.data\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/*Display the result in a table only when the data is retrieved from the backend*/\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(this.state.data);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.state.data=[];\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse{\t\r\n\t\t\taxios.get(`http://localhost:8082/searchById/${patientId}`).then(res=>{\r\n\t\t\t\tif(res.data===\"Server is down.Please check if the server is working\"|| res.data===\"Patient Not Found\" || res.data===\"No patients available\"){\r\n\t\t\t\t\tthis.handleSuccessfulResponse(res.data)\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdata: res.data\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(this.state.data);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconsole.log('it is in else part')\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\thandleSuccessfulResponse=(res)=>{\r\n\t\tthis.setState({searchmessage: res})\r\n\t\tconsole.log(this.state.searchmessage);\r\n\t}\r\n\trender(){\r\n\r\n\t\tvar { data = [] } = this.props;\r\n\t\treturn(\r\n\t\t\t\t<div className=\"d-flex flex-wrap justify-content-center align-items-center container\">\r\n\t\t\t\t<Form id=\"form\">\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{this.state.searchmessage}\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<div>\r\n\t\t\t\t<div className=\"form-group row\">                                                                           \r\n\t\t\t\t<Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"patientid\"/>    \r\n\t\t\t\t\t<div className=\"col-sm-8\">                                                                             \r\n\t\t\t\t\t<Translate component= \"input\" type=\"text\" className=\"form-control\" id=\"pid\"  \r\n\t\t\t\t\tattributes={{placeholder: \"enterpatientid\"}}\r\n\t\t\t\tname=\"patientId\"                                                         \r\n\t\t\t\t\tvalue={this.state.patientId}                                                                    \r\n\t\t\t\tonChange={this.handleIdChange}/> \r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\r\n\t\t\t\t<Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"firstname\"/>  \r\n\t\t\t\t\t<div className=\"col-sm-8\"> \r\n\t\t\t\t\t<Translate component= \"input\" type=\"text\" className=\"form-control\" id=\"firstName\"  \r\n\t\t\t\t\tattributes={{placeholder: \"enterpatientfirstname\" }}\r\n\t\t\t\t\tname=\"firstName\"                                                         \r\n\t\t\t\t\tvalue={this.state.firstName}   \r\n\t\t\t\t\tonChange={this.handleIdChange}/> \r\n\t\t\t\t</div>  \r\n\t\t\t\t\t{this.state.firstNameError ? (<div className={styles.error}>{this.state.firstNameError}</div>) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\t\t\t\t<Translate component= \"label\" className=\"col-sm-3 col-form-label\" content=\"lastname\"/>  \r\n\t\t\t\t\t<div className=\"col-sm-8\"> \r\n\t\t\t\t\t<Translate component= \"input\" type=\"text\" className=\"form-control\" id=\"lastName\"  \r\n\t\t\t\t\tattributes={{placeholder: \"enterpatientlastname\" }}\r\n\t\t\t\t\tname=\"lastName\"                                                         \r\n\t\t\t\t\tvalue={this.state.lastName}                                                                    \r\n\t\t\t\t\tonChange={this.handleIdChange}/> \r\n\t\t\t\t</div>  \r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group row\">\r\n\r\n\t\t\t\t<label className=\"col-sm-3 col-form-label\">D.O.B:</label>  \r\n\t\t\t\t\t<div className=\"col-sm-8\"> \r\n\t\t\t\t\t<Translate component= \"input\" type=\"text\" className=\"form-control\" id=\"dob\"  \r\n\t\t\t\t\tattributes={{placeholder: \"enterpatientdob\" }}\r\n\t\t\t\tname=\"dob\"                                                         \r\n\t\t\t\t\tvalue={this.state.dob}                                                                    \r\n\t\t\t\tonChange={this.handleIdChange}/> \r\n\t\t\t\t</div>  \r\n\t\t\t\t\t{this.state.dobError ? (<div className={styles.error}>{this.state.dobError}</div>) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<br></br>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row-md-3 text-center\"> \r\n\t\t\t\t\t\t<Translate component=\"Button\" className=\"btn btn-primary mr-3\" onClick={this.searchByIdFirstnameLastnameDob} content=\"searchByidfirstnamelastnamedob\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.show &&\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t<Translate component=\"th\" content=\"patientid\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"firstname\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"lastname\"/>\r\n\t\t\t\t\t\t<th>D.O.B</th>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"gender\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"email\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"addressline1\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"addressline2\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"city\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"state\"/>\r\n\t\t\t\t\t\t<Translate component=\"th\" content=\"country\"/>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody> \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.data.map(\r\n\t\t\t\t\t\t\t\t\t(data, index)=>\r\n\t\t\t\t\t\t\t\t\t<tr key={data.id}>\r\n\t\t\t\t\t\t\t\t\t<td >{data.id}</td>\r\n\t\t\t\t\t\t\t\t\t<td >{data.firstName}</td>\r\n\t\t\t\t\t\t\t\t\t<td >{data.lastName}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"22%\">{data.dob}</td>\r\n\t\t\t\t\t\t\t\t\t<td >{data.gender}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"20%\">{data.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"5%\">{data.address.addressLine1}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"5%\">{data.address.addressLine2}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"21%\">{data.address.city}</td>\r\n\t\t\t\t\t\t\t\t\t<td width=\"20%\">{data.address.state}</td>\r\n\t\t\t\t\t\t\t\t\t<td >{data.address.country}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Search;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Route,Switch} from \"react-router-dom\";\r\nimport RegistrationForm from '../components/RegistrationForm';\r\nimport Home from '../components/Home';\r\nimport Search from '../components/Search';\r\nclass ActionFront extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Actionfront\">\r\n            \t\t<Switch>\r\n                         <Route exact path=\"/\" component={Home}/>\r\n                         <Route path=\"/Register\" component={RegistrationForm}/>\r\n                         <Route path=\"/Search\" component={Search}/>\r\n                         \r\n                    </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ActionFront;","import React,{Component} from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport ActionFront from './controllers/ActionFront';\n\nclass App extends Component{\n\trender()\n\t{\n\t\treturn(\n\t\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t<Header/>\n\t\t\t\t<ActionFront/>\n\t\t\t\t</Router>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n//export App\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}